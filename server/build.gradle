buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id "org.jruyi.thrift" version "0.4.1"
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'org.zapo'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
    main.java.srcDirs += "$buildDir/gen-src"
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.13.0'
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

compileThrift {
    thriftExecutable "bin/thrift-0.13.0.exe"
    sourceDir "$projectDir/api-thrift"
    outputDir "$buildDir/gen-src"

    nowarn true
    strict true
    verbose true
    recurse true
    debug true
    allowNegKeys true
    allow64bitsConsts true
    createGenFolder false

    generator 'java', 'private-members'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.zactrack.ApplicationKt'
        jar.baseName = 'zaceyeBackend'
        version = null
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
